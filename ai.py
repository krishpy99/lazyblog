import google.generativeai as genai
from config import Settings

env = Settings()

class Gemini:
    def Gemini(self):
        genai.configure(api_key=env.gemini_api_key)
        self.model = genai.GenerativeModel('gemini-pro')

    def get_search(self, topic):
        response = self.model.generate_content("write some google search queries to retrieve articles related to " + topic)
        print(response.text)

    def get_prompt(self, topic, relevant_data = None):
        response = self.model.generate_content("write a good prompt to generate an article using gemini under the topic " + topic)
        print(response.text)
        return response.text

    def write_article(self, prompt):
        response = self.model.generate_content("create a nice title for the article that would be generated by the following prompt\n" + prompt + "\n Just give the title alone, do not give the content")
        title = response.text
        response = self.model.generate_content("create the article that would be generated by the following prompt\n" + prompt + "\n Just give the content alone, do not give the title. Write the content in a html code format and change styles as deemed necessary.")
        content = response.text
        response = self.model.generate_content("give me the tags that the following article would be associated with " + content + "make sure the tags are broad and not very specific and single worded. the tags must be comma spaced.")

        tags = response.text
        tags = tags.split(',')
        return {"title": title, "content": content, "tags": tags}